daemon off;
pid /run/nginx.pid;

worker_processes auto;
pcre_jit on;
worker_rlimit_nofile 8192;
# Configures default error logger.
# error_log /dev/stdout info;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;

events {
	  worker_connections  4096;
    use epoll;
    multi_accept on;
}

http {
	include /etc/nginx/mime.types;
	default_type application/octet-stream;
	client_max_body_size 5m;
	keepalive_timeout 65;
	sendfile on;
	tcp_nodelay on;
  tcp_nopush on;
  server_tokens off;

	# Specifies the main log format.
	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
			'$status $body_bytes_sent "$http_referer" '
			'"$http_user_agent" "$http_x_forwarded_for"';

  # output access logs in console
	# access_log /dev/stdout;
	# access_log /var/log/nginx/access.log main;
	# access_log off;
  access_log /var/log/nginx/access.log main;
  error_log /var/log/nginx/error.log crit;
  error_log /dev/stdout crit;

  upstream nextjs {
      server localhost:3000;
  }

  map $http_x_forwarded_proto $thescheme {
      default $scheme;
      https https;
  }

  server {

    location / {
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_set_header Accept-Encoding "";
        proxy_pass http://nextjs;
        proxy_pass_request_headers on;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Server $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $thescheme;
        proxy_set_header X-Scheme $thescheme;
        proxy_pass_header X-Forwarded-Port;
        proxy_pass_header X-Forwarded-Proto;
        add_header Access-Control-Allow-Headers *;
        add_header Access-Control-Allow-Origin *;
        add_header X-Frame-Origin SAMEORIGIN;
    }

  }
}
# events {
#     worker_connections 1024;
# }

# http {
#   server {
#     listen 80 default_server;
#     listen [::]:80 default_server;
#       server_name _;
#       index index.html index.htm;

#       location / {
#           # reverse proxy for next server
#           proxy_pass http://localhost:3000;
#           proxy_http_version 1.1;
#           proxy_set_header Upgrade $http_upgrade;
#           proxy_set_header Connection 'upgrade';
#           proxy_set_header Host $host;
#           proxy_cache_bypass $http_upgrade;
#       }
#   }
# }
